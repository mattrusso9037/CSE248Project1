package Main;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class EmployeeTerminalView extends CustomerTerminalView {

	@Override
	public void start(Stage employee) throws Exception {
		BorderPane borderPane = new BorderPane();
		VBox vbox = new VBox();
		VBox dialPad = new VBox();
		HBox welcomeBox = new HBox();
		VBox slotNumberFieldBox = new VBox();
		HBox buttonBox = new HBox();
		VBox footer = new VBox();
		HBox search = new HBox();
		
		HBox carSpots = new HBox();
		VBox carSpotsRowOne = new VBox();
		VBox carSpotsRowTwo = new VBox();
		VBox carSpotsRowThree = new VBox();
		
		FlowPane spots = new FlowPane();

		HBox a = new HBox();
		Label aa = new Label("1");
		a.getChildren().add(aa);
		aa.setMinWidth(25);
		aa.setStyle("-fx-background-color: white");
		
		HBox b = new HBox();
		Label bb = new Label("2");
		b.getChildren().add(bb);
		bb.setStyle("-fx-background-color: white");

		
		
		
		spots.getChildren().addAll(a,b);
		
		
		
		
		HBox c = new HBox();
		HBox d = new HBox();
		HBox ee = new HBox();
		HBox f = new HBox();
		HBox g = new HBox();
		HBox h = new HBox();
		HBox i = new HBox();
		HBox j = new HBox();
		HBox k = new HBox();
		HBox l = new HBox();
		HBox m = new HBox();
		HBox n = new HBox();
		HBox o = new HBox();
		HBox p = new HBox();
		HBox q = new HBox();
		HBox r = new HBox();
		HBox s = new HBox();
		HBox t = new HBox();
		HBox u = new HBox();
		HBox v = new HBox();
		HBox w = new HBox();
		HBox x = new HBox();
		HBox y = new HBox();
		HBox z = new HBox();
		HBox one = new HBox();
		HBox two = new HBox();
		HBox three = new HBox();
		HBox four = new HBox();
		
		
		carSpotsRowTwo.getChildren().addAll(k,l,m,n,o,p,q,r,s,t);
		carSpotsRowThree.getChildren().addAll(u,v,w,x,y,z,one,two,three,four);
		carSpots.setStyle("-fx-background-color: white;");
		carSpots.getChildren().addAll(carSpotsRowOne, carSpotsRowTwo, carSpotsRowThree);


		Button searchButton = new Button("search");
		searchButton.setMinWidth(100);
		searchButton.setAlignment(Pos.CENTER);
		
		
		
		Label spaceNumberText = new Label("space number");
		Label returnTimeText = new Label("return time");
		
	
		
		
		
		
		
		//top 
		welcomeBox.setMinHeight(200);
		welcomeBox.setPadding(new Insets(100, 0, 100, 0));
	    welcomeBox.setStyle("-fx-background-color: #98AFC7;");
	    Text welcomeText = new Text("Enter ticket information below");
		welcomeBox.getChildren().addAll(welcomeText);
		welcomeBox.setAlignment(Pos.CENTER);
		
		// middle
		slotNumberFieldBox.setMinWidth(700);
		slotNumberFieldBox.setStyle("-fx-background-color: #98AFC7;");
		slotNumberFieldBox.setPadding(new Insets(0, 0, 0, 278));
		slotNumberFieldBox.setSpacing(50);
		TextField slotNumberEntry = new TextField();
		TextField returnTimeEntry = new TextField();
		slotNumberEntry.setMaxWidth(100);
		returnTimeEntry.setMaxWidth(100);

		search.getChildren().add(searchButton);
		search.setSpacing(10);
		search.setAlignment(Pos.CENTER);
		slotNumberFieldBox.setSpacing(5);
		
		slotNumberFieldBox.getChildren().addAll(slotNumberEntry, spaceNumberText, search, spots);
		
		

		Text carRateText = new Text("The rate for cars is $25 per hour");
		Text bikeRateText = new Text("The rate for motorcycles is $20 per hour");
		Text truckRateText = new Text("The rate for trucks is $30 per hour");
		Text allDayRateText = new Text("The all day rate (12 hours) for any vehicle is $150");
		footer.setMinWidth(700);
		footer.setStyle("-fx-background-color: #E5E4E2;");
		footer.setSpacing(7);
		footer.getChildren().addAll(carRateText, bikeRateText, truckRateText, allDayRateText);
		footer.setAlignment(Pos.CENTER);

		
		searchButton.setOnAction(e -> {
			if (!Lot.getLot().vehiclesMap.isEmpty()) {
		Lot.getLot().findVehicleById(slotNumberEntry.getText());
		Lot.getLot().value.display();
		
		Alert details = new Alert(AlertType.CONFIRMATION);
		details.setTitle("Confirmation");
		details.setContentText(
				"Spot Number: " + Lot.getLot().value.getSlotNumber()
						+ "\nCustomer Owes: $" + Lot.getLot().value.getPrice());
		details.show();
		slotNumberEntry.clear();
		
		//if time now > return time add $100
//		if(Integer.parseInt(Lot.getLot().value.getNow()) > Integer.parseInt(Lot.getLot().value.getReturnTime(Lot.getLot().value.getHours()))) {
//			Lot.getLot().value.setPrice(Lot.getLot().value.getPrice() + 100);
//			
//		}
		
		Lot.getLot().vehiclesMap.remove(slotNumberEntry.getText());
			}
		
		
		});

		// footer

		vbox.setMinSize(employee.getWidth(), employee.getHeight());
		borderPane.getChildren().addAll(vbox);
		borderPane.setBottom(footer);
		borderPane.setTop(welcomeBox);
		borderPane.setCenter(slotNumberFieldBox);
		Scene scene = new Scene(borderPane, 700, 750);
		employee.setTitle("Employee Terminal");
		employee.setX(700);
		employee.setY(0);
		employee.setScene(scene);
		employee.show();
	}

	private void car(int parseInt, String returnTime) {
		// TODO Auto-generated method stub

	}
}
