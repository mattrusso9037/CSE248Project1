package Main;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class EmployeeTerminalView extends CustomerTerminalView {

	@Override
	public void start(Stage employee) throws Exception {
		BorderPane borderPane = new BorderPane();
		VBox vbox = new VBox();
		VBox dialPad = new VBox();
		HBox welcomeBox = new HBox();
		VBox slotNumberFieldBox = new VBox();
		HBox buttonBox = new HBox();
		VBox footer = new VBox();
		HBox search = new HBox();

		HBox carSpots1 = new HBox();
		HBox carSpots2 = new HBox();
		HBox carSpots3 = new HBox();

	

		HBox spots = new HBox();

		HBox a = new HBox();
		Label aa = new Label("1");
		a.getChildren().add(aa);
		aa.setMinWidth(25);
		aa.setAlignment(Pos.CENTER);
		
		HBox b = new HBox();
		Label bb = new Label("2");
		b.getChildren().add(bb);
		bb.setMinWidth(25);
		bb.setAlignment(Pos.CENTER);
		
		HBox c = new HBox();
		Label cc = new Label("3");
		c.getChildren().add(cc);
		cc.setMinWidth(25);
		cc.setAlignment(Pos.CENTER);
		
		HBox d = new HBox();
		Label dd = new Label("4");
		d.getChildren().add(dd);
		dd.setMinWidth(25);
		dd.setAlignment(Pos.CENTER);
		
		HBox e = new HBox();
		Label ee = new Label("5");
		e.getChildren().add(ee);
		ee.setMinWidth(25);
		ee.setAlignment(Pos.CENTER);
		
		HBox f = new HBox();
		Label ff = new Label("6");
		f.getChildren().add(ff);
		ff.setMinWidth(25);
		ff.setAlignment(Pos.CENTER);
		
		HBox g = new HBox();
		Label gg = new Label("7");
		g.getChildren().add(gg);
		gg.setMinWidth(25);
		gg.setAlignment(Pos.CENTER);
		
		HBox h = new HBox();
		Label hh = new Label("8");
		h.getChildren().add(hh);
		hh.setMinWidth(25);
		hh.setAlignment(Pos.CENTER);
		
		HBox i = new HBox();
		Label ii = new Label("9");
		i.getChildren().add(ii);
		ii.setMinWidth(25);
		ii.setAlignment(Pos.CENTER);
		
		HBox j = new HBox();
		Label jj = new Label("10");
		j.getChildren().add(jj);
		jj.setMinWidth(25);
		jj.setAlignment(Pos.CENTER);
		
		HBox k= new HBox();
		Label kk = new Label("11");
		k.getChildren().add(kk);
		kk.setMinWidth(25);
		kk.setAlignment(Pos.CENTER);
		
		HBox l = new HBox();
		Label ll = new Label("12");
		l.getChildren().add(ll);
		ll.setMinWidth(25);
		ll.setAlignment(Pos.CENTER);
		
		HBox m = new HBox();
		Label mm = new Label("13");
		m.getChildren().add(mm);
		mm.setMinWidth(25);
		mm.setAlignment(Pos.CENTER);
		
		HBox n = new HBox();
		Label nn = new Label("14");
		n.getChildren().add(nn);
		nn.setMinWidth(25);
		nn.setAlignment(Pos.CENTER);
		
		HBox o = new HBox();
		Label oo = new Label("15");
		o.getChildren().add(oo);
		oo.setMinWidth(25);
		oo.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
//		HBox b = new HBox();
//		Label bb = new Label("2");
//		b.getChildren().add(bb);
//		bb.setMinWidth(25);
//		bb.setAlignment(Pos.CENTER);
		
	
		
			if (Lot.getLot().vehiclesMap.containsKey("1")) {
				aa.setStyle("-fx-background-color: red");
			} else {
				aa.setStyle("-fx-background-color: green");
			}
			if (Lot.getLot().vehiclesMap.containsKey("2")) {
				bb.setStyle("-fx-background-color: red");
			} else {
				bb.setStyle("-fx-background-color: green");
			}
			if (Lot.getLot().vehiclesMap.containsKey("3")) {
				cc.setStyle("-fx-background-color: red");
			} else {
				cc.setStyle("-fx-background-color: green");
			}
			if (Lot.getLot().vehiclesMap.containsKey("4")) {
				dd.setStyle("-fx-background-color: red");
			} else {
				dd.setStyle("-fx-background-color: green");
			}
			if (Lot.getLot().vehiclesMap.containsKey("5")) {
				ee.setStyle("-fx-background-color: red");
			} else {
				ee.setStyle("-fx-background-color: green");
			}
			
			if (Lot.getLot().vehiclesMap.containsKey("6")) {
				ff.setStyle("-fx-background-color: red");
			} else {
				ff.setStyle("-fx-background-color: green");
			}
			if (Lot.getLot().vehiclesMap.containsKey("7")) {
				gg.setStyle("-fx-background-color: red");
			} else {
				gg.setStyle("-fx-background-color: green");
			}	if (Lot.getLot().vehiclesMap.containsKey("8")) {
				hh.setStyle("-fx-background-color: red");
			} else {
				hh.setStyle("-fx-background-color: green");
			}
			if (Lot.getLot().vehiclesMap.containsKey("9")) {
				ii.setStyle("-fx-background-color: red");
			} else {
				ii.setStyle("-fx-background-color: green");
			}if (Lot.getLot().vehiclesMap.containsKey("10")) {
				jj.setStyle("-fx-background-color: red");
			} else {
				jj.setStyle("-fx-background-color: green");
			}if (Lot.getLot().vehiclesMap.containsKey("11")) {
				kk.setStyle("-fx-background-color: red");
			} else {
				kk.setStyle("-fx-background-color: green");
			}if (Lot.getLot().vehiclesMap.containsKey("12")) {
				ll.setStyle("-fx-background-color: red");
			} else {
				ll.setStyle("-fx-background-color: green");
			}if (Lot.getLot().vehiclesMap.containsKey("13")) {
				mm.setStyle("-fx-background-color: red");
			} else {
				mm.setStyle("-fx-background-color: green");
			}if (Lot.getLot().vehiclesMap.containsKey("14")) {
				nn.setStyle("-fx-background-color: red");
			} else {
				nn.setStyle("-fx-background-color: green");
			}if (Lot.getLot().vehiclesMap.containsKey("15")) {
				oo.setStyle("-fx-background-color: red");
			} else {
				oo.setStyle("-fx-background-color: green");
			}
	

	

		carSpots1.setSpacing(3);
		carSpots1.getChildren().addAll(a, b, c,d,e,f,g,h,i,j);
		carSpots2.setSpacing(3);
		carSpots2.getChildren().addAll(k,l,m,n,o);
		spots.getChildren().addAll(carSpots1,carSpots2);

		
//		HBox d = new HBox();
//		HBox ee = new HBox();
//		HBox f = new HBox();
//		HBox g = new HBox();
//		HBox h = new HBox();
//		HBox i = new HBox();
//		HBox j = new HBox();
//		HBox k = new HBox();
//		HBox l = new HBox();
//		HBox m = new HBox();
//		HBox n = new HBox();
//		HBox o = new HBox();
//		HBox p = new HBox();
//		HBox q = new HBox();
//		HBox r = new HBox();
//		HBox s = new HBox();
//		HBox t = new HBox();
//		HBox u = new HBox();
//		HBox v = new HBox();
//		HBox w = new HBox();
//		HBox x = new HBox();
//		HBox y = new HBox();
//		HBox z = new HBox();
//		HBox one = new HBox();
//		HBox two = new HBox();
//		HBox three = new HBox();
//		HBox four = new HBox();

//		carSpotsRowTwo.getChildren().addAll(k, l, m, n, o, p, q, r, s, t);
//		carSpotsRowThree.getChildren().addAll(u, v, w, x, y, z, one, two, three, four);
//		carSpots.setStyle("-fx-background-color: white;");
//		carSpots.getChildren().addAll(carSpotsRowOne, carSpotsRowTwo, carSpotsRowThree);

		Button searchButton = new Button("search");
		searchButton.setMinWidth(100);
		searchButton.setAlignment(Pos.CENTER);

		Label spaceNumberText = new Label("space number");
		Label returnTimeText = new Label("return time");

		// top
		welcomeBox.setMinHeight(200);
		welcomeBox.setPadding(new Insets(100, 0, 100, 0));
		welcomeBox.setStyle("-fx-background-color: #98AFC7;");
		Text welcomeText = new Text("Enter ticket information below");
		welcomeBox.getChildren().addAll(welcomeText);
		welcomeBox.setAlignment(Pos.CENTER);

		// middle
		slotNumberFieldBox.setMinWidth(700);
		slotNumberFieldBox.setStyle("-fx-background-color: #98AFC7;");
		slotNumberFieldBox.setPadding(new Insets(0, 0, 0, 278));
		slotNumberFieldBox.setSpacing(50);
		TextField slotNumberEntry = new TextField();
		TextField returnTimeEntry = new TextField();
		slotNumberEntry.setMaxWidth(100);
		returnTimeEntry.setMaxWidth(100);

		search.getChildren().add(searchButton);
		search.setSpacing(10);
		search.setAlignment(Pos.CENTER);
		slotNumberFieldBox.setSpacing(5);

		slotNumberFieldBox.getChildren().addAll(slotNumberEntry, spaceNumberText, search, spots);

		Platform.runLater(new Runnable() {

			@Override
			public void run() {

			}

		});

		Text carRateText = new Text("The rate for cars is $25 per hour");
		Text bikeRateText = new Text("The rate for motorcycles is $20 per hour");
		Text truckRateText = new Text("The rate for trucks is $30 per hour");
		Text allDayRateText = new Text("The all day rate (12 hours) for any vehicle is $150");
		footer.setMinWidth(700);
		footer.setStyle("-fx-background-color: #E5E4E2;");
		footer.setSpacing(7);
		footer.getChildren().addAll(carRateText, bikeRateText, truckRateText, allDayRateText);
		footer.setAlignment(Pos.CENTER);

		searchButton.setOnAction(action -> {
			if (!Lot.getLot().vehiclesMap.isEmpty()) {
				Lot.getLot().findVehicleById(slotNumberEntry.getText());
				Lot.getLot().value.display();

				Alert details = new Alert(AlertType.CONFIRMATION);
				details.setTitle("Confirmation");
				details.setContentText("Spot Number: " + Lot.getLot().value.getSlotNumber() + "\nCustomer Owes: $"
						+ Lot.getLot().value.getPrice());
				details.show();
				

				// if time now > return time add $100
				// if(Integer.parseInt(Lot.getLot().value.getNow()) >
				// Integer.parseInt(Lot.getLot().value.getReturnTime(Lot.getLot().value.getHours())))
				// {
				// Lot.getLot().value.setPrice(Lot.getLot().value.getPrice() +
				// 100);
				//
				// }

				Lot.getLot().vehiclesMap.remove(slotNumberEntry.getText());
				
				Platform.runLater(new Runnable() {
					
					@Override
					public void run() {
					
						try {
							new EmployeeTerminalView().start(employee);
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						};
						
					}
					
				});
			}
			slotNumberEntry.clear();
		});

		// footer

		vbox.setMinSize(employee.getWidth(), employee.getHeight());
		borderPane.getChildren().addAll(vbox);
		borderPane.setBottom(footer);
		borderPane.setTop(welcomeBox);
		borderPane.setCenter(slotNumberFieldBox);
		Scene scene = new Scene(borderPane, 700, 750);
		employee.setTitle("Employee Terminal");
		employee.setX(700);
		employee.setY(0);
		employee.setScene(scene);
		employee.show();
	}

	private void car(int parseInt, String returnTime) {
		// TODO Auto-generated method stub

	}

}
